{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","할일","할일변경","입력값","입력값변경","className","length","map","일","i","onClick","arrayCopy","splice","onChange","e","target","value","id","unshift","alert","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOA0DeA,MArDf,WAAgB,IAAD,EAEMC,mBAAS,CAAC,eAAM,eAAM,eAF5B,mBAENC,EAFM,KAEFC,EAFE,OAGQF,mBAAS,IAHjB,mBAGNG,EAHM,KAGDC,EAHC,KAKb,OACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,6DACA,qBAAKA,UAAU,MAAf,gCACA,sBAAKA,UAAU,aAAf,2BAAiCJ,EAAGK,OAApC,4BAGF,qBAAKD,UAAU,YAAf,SAEEJ,EAAGM,KAAI,SAACC,EAAGC,GACT,OACA,sBAAKJ,UAAU,OAAf,UACE,mCAAOG,EAAP,IAAW,wBAAQH,UAAU,YAAYK,QAAS,WAChD,IAAIC,EAAS,YAAOV,GACpBU,EAAUC,OAAOJ,EAAG,GACpBN,EAAMS,IAHG,0BAAX,OAKA,yBANyBF,QAa/B,sBAAKJ,UAAU,cAAf,UACE,uBAAOQ,SAAW,SAACC,GAAMV,EAAMU,EAAEC,OAAOC,QAAWX,UAAU,aAAaY,GAAG,eAC7E,wBAAQP,QAAU,WAChB,IAAIC,EAAS,YAAOV,GACpBU,EAAUO,QAAQf,GACR,IAAPA,EAEDgB,MAAM,uDAERjB,EAAMS,GAWdS,SAASC,eAAe,cAAcL,MAAM,KARlCX,UAAU,WAVd,6CCzBOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,SAM1BC,M","file":"static/js/main.7d7ecd43.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [할일, 할일변경] = useState(['운동', '복습', 'typeScript']);\n  const [입력값, 입력값변경] = useState('');\n  \n  return (\n    <div className=\"TemplateBlock\">\n      <div className=\"HeadBlock\">\n        <h1>2021년 1월 11일</h1>\n        <div className=\"day\">월요일</div>\n        <div className=\"tasks-left\">할 일 {할일.length}개 남음</div>\n      </div>\n\n      <div className=\"ListBlock\">\n      { // i는 반복문이 돌 때마다 0,1,2가 되는 변수 (변수의 가장 끝 값)\n        할일.map((일, i)=>{\n          return (\n          <div className=\"list\" key={i}>\n            <h3> { 일 } <button className=\"DeleteBtn\" onClick={()=>{\n              var arrayCopy = [...할일]\n              arrayCopy.splice(일, 1)\n              할일변경 (arrayCopy)\n            }}>삭제</button> </h3>\n            <hr/>\n          </div>\n          )\n        })\n      }\n      </div>\n\n      <div className=\"InsertBlock\">\n        <input onChange={ (e)=>{ 입력값변경(e.target.value) } } className=\"InputBlock\" id=\"input_text\"/>\n        <button onClick={ ()=>{\n          var arrayCopy = [...할일]\n          arrayCopy.unshift(입력값);\n          if(입력값 == '')\n          {\n            alert('값을 입력해주세요!')\n          } else {\n          할일변경( arrayCopy );\n          clear();\n          }\n        } } className=\"InputBtn\">추가하기</button>\n      </div>\n\n    </div>\n  );\n}\n\nfunction clear(){\n  document.getElementById(\"input_text\").value='';\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}